// Generated by CoffeeScript 1.6.3
(function() {
  var htmlDecode, htmlEncode, socket, wrapMessage;

  socket = io.connect('http://localhost:3000');

  window.socket = socket;

  wrapMessage = function(str) {
    return {
      message: str
    };
  };

  htmlEncode = function(value) {
    return $('<div/>').text(value).html();
  };

  htmlDecode = function(value) {
    return $('<div/>').html(value).text();
  };

  socket.on('onConnect', function(data) {
    console.log(data);
    $("#chat-history").append("<p class='on-connect'><span class='message'> " + (htmlEncode(data.message)) + ":</span> " + data.date + "</p>");
    return socket.emit('onConnect', wrapMessage('client connected:'));
  });

  socket.on('updateChat', function(data) {
    var $chatHistory, self, _ref;
    self = (_ref = data.username === socket.username) != null ? _ref : {
      'self': ''
    };
    $chatHistory = $("#chat-history");
    $chatHistory.append("<p class='chat'><span class='username " + self + "'>" + (htmlEncode(data.username)) + "</span>: " + (htmlEncode(data.message)) + "</p>");
    return $chatHistory.scrollTop($chatHistory[0].scrollHeight);
  });

  socket.on('newUser', function(data) {
    var $chatHistory;
    $chatHistory = $("#chat-history");
    $chatHistory.append("<p class='new-user'><span class='username'>" + (htmlEncode(data.message)) + "</span> has joined the conversation.</p>");
    $chatHistory.scrollTop($chatHistory[0].scrollHeight);
    if (socket.username === data.message) {
      $("#authenticate").hide('slow');
      $("#chat").show('slow');
      return $("#chat-input").focus();
    }
  });

  socket.on('debug', function(data) {
    return console.log(data);
  });

  $(function() {
    $("#login-form input[name='username']").focus();
    $("#login-form").submit(function(e) {
      var name;
      e.preventDefault();
      name = $("#login-form input[name='username']").val();
      if (name) {
        socket.username = name;
        return socket.emit('setName', wrapMessage(name));
      }
    });
    return $("#chat-input-form").submit(function(e) {
      var $chatInput, message;
      e.preventDefault();
      $chatInput = $("#chat-input");
      message = $chatInput.val();
      $chatInput.val('');
      return socket.emit('onChat', wrapMessage(message));
    });
  });

}).call(this);

/*
//@ sourceMappingURL=app-client.map
*/
